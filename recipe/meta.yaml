{% set name = "openmm" %}
{% set version = "7.4.2" %}
{% set build = 0 %}

package:
  name: {{ name }}
  version: {{ version }}

source:
  url: https://github.com/openmm/{{ name }}/archive/{{ version }}.tar.gz
  sha256: 2e121ad5cfcc4840861032bb1b11d4d0aea2d3ca3c59baaed73b8b0b4fd069cc

build:
  number: {{ build }}
  string: py{{ PY_VER.replace(".", "") }}h{{ PKG_HASH }}_{{ opencl_impl }}_{{ build }}
  skip: true  # [win]
  missing_dso_whitelist:
    - '*/libcuda.*'  # [linux]
    - "*/libOpenCL.*"  # [unix]
  script_env:
    - opencl_impl

requirements:
  build:
    - {{ compiler('c') }}
    - {{ compiler('cxx') }}
    - {{ compiler('cuda') }}  # [linux]
    - {{ cdt('mesa-libgl-devel') }}  # [linux]
    - cmake
    - jom  # [win]

  host:
    - python
    - fftw
    - swig
    - pthread-stubs
    - lxml
    - numpy
    - cython
    # needed for Python wrappers
    - doxygen 1.8.14
    # OpenCL ICD loader
    - ocl-icd  # [linux and (opencl_impl == "icdloader")]
    - khronos-opencl-icd-loader  # [(osx or win) and (opencl_impl == "icdloader")]

  run:
    - python
    - fftw
    - numpy
    # OpenCL ICD loader
    - khronos-opencl-icd-loader  # [(osx or win) and (opencl_impl == "icdloader")]
    - ocl_icd_wrapper_apple  # [(osx) and (opencl_impl == "icdloader")]
    - ocl-icd  # [(linux) and (opencl_impl == "icdloader")]
    - ocl-icd-system  # [(linux) and (opencl_impl == "icdloader")]

test:
  requires:
    - pocl  # [unix and (opencl_impl == "icdloader")]
  imports:
    - simtk
    - simtk.openmm
  commands:
    ### Basic tests
    - python -m simtk.testInstallation
    ### Existence tests Unix
    - test -f $PREFIX/lib/libOpenMM$SHLIB_EXT  # [unix]
    - test -f $PREFIX/lib/plugins/libOpenMMCPU$SHLIB_EXT  # [unix]
    - test -f $PREFIX/lib/plugins/libOpenMMOpenCL$SHLIB_EXT  # [unix]
    - test -f $PREFIX/lib/plugins/libOpenMMCUDA$SHLIB_EXT  # [linux]
    ### Existence tests Windows
    - if not exist %LIBRARY_LIB%/OpenMM.lib exit 1  # [win]
    - if not exist %LIBRARY_LIB%/plugins/OpenMMOpenCL.lib exit 1  # [win]
    - if not exist %LIBRARY_LIB%/plugins/OpenMMCPU.lib exit 1  # [win]
    ### Debug hardcoded library path
    - python -c "import os, simtk.openmm.version as v; print(v.openmm_library_path); assert os.path.isdir(v.openmm_library_path), 'Directory does not exist'"
    ### Debug silent errors in plugin loading
    - python -c "import simtk.openmm as mm; print(mm.Platform.getPluginLoadFailures())"
    ### Platform visibility
    # Linux can see all 4 platforms, but CUDA is not usable because there's no GPU there
    # OpenCL is visible because we link against the ICD loader _and_ install `pocl` to provide a functional implementation
    - python -c "from simtk.openmm import Platform as P; n = P.getNumPlatforms(); assert n == 4, f'n_platforms ({n}) != 4'"  # [linux and (opencl_impl == "icdloader")]
    # If we link against nVidia's OpenCL, this is not visible without a GPU
    - python -c "from simtk.openmm import Platform as P; n = P.getNumPlatforms(); assert n == 3, f'n_platforms ({n}) != 3'"  # [linux and (opencl_impl != "icdloader")]
    # MacOS only sees 3 because CUDA is not available there
    # OpenCL will be visible regardless what we link to
    #  - pocl will be visible and loaded if we link against the ICD loader (in the future, it will be rejected too)
    #  - Apple's will be visible, but it's rejected as not compatible
    - python -c "from simtk.openmm import Platform as P; n = P.getNumPlatforms(); assert n == 3, f'n_platforms ({n}) != 3'"  # [osx]


about:
  home: http://openmm.org
  license: LGPL-3.0-or-later
  license_family: LGPL
  license_file:
    - docs-source/licenses/Licenses.txt
    - docs-source/licenses/LGPL.txt
    - docs-source/licenses/GPL.txt
  summary: A high performance toolkit for molecular simulation.

  description: |
    OpenMM is a toolkit for molecular simulation. It can be used either as a
    stand-alone application for running simulations, or as a library you call
    from your own code. It provides a combination of extreme flexibility
    (through custom forces and integrators), openness, and high performance
    (especially on recent GPUs) that make it truly unique among simulation
    codes. OpenMM is MIT licensed with some LGPL portions (CUDA and OpenCL
    platforms).
  doc_url: http://docs.openmm.org
  dev_url: https://github.com/openmm/openmm

extra:
  recipe-maintainers:
    - jchodera
    - jaimergp
    - peastman
